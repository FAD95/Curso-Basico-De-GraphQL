type Course {
  _id: ID!
  title: String!
  teacher: String
  description: String!
  topic: String
  # Para relacionar Course con  Student 
  people: [Student]
}

type Student {
  _id: ID!
  name: String!
  email: String!
}
type Query {
  "Devuelve todos los cursos"
  getCourses: [Course]
  "Devuelve un curso"
  getCourse(id: ID!): Course
  "Devuelve todos los estudiantes"
  getStudents: [Student]
  "Devuelve un estudiante"
  getStudent(id: ID!): Student
}

input CourseInput {
  title: String!
  teacher: String
  description: String!
  topic: String
}

input CourseEditInput {
  title: String
  teacher: String
  description: String
  topic: String
}

input StudentInput {
  name: String!
  email: String!
}

input StudentEditInput {
  name: String
  email: String
}

type Mutation {
  "Crea un curso"
  # El primer parametro especifica lo que se requiere para ejecutar la acci√≥n
  # EL segundo parametro es el tipo de elemento que se retornara
  createCourse(input: CourseInput!): Course

  "Edita un curso"
  editCourse(_id: ID!, input: CourseEditInput): Course

  "Elimina un curso"
  deleteCourse(_id: ID!): String

  "Crea un estudiante"
  createStudent(input: StudentInput!): Student

  "Edita un estudiante"
  editStudent(_id: ID!, input: StudentEditInput): Student

   "Elimina un estudiante"
  deleteStudent(_id: ID!): String

  "Agrega una persona a un curso"
  addPeople(courseID: ID!, personID: ID!): Course
}
